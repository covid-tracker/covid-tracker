{"version":3,"sources":["components/GetProvincialStats.jsx","components/Widget.jsx","components/LogoMain.jsx","components/LineGraph.jsx","components/BarGraph.jsx","components/Map.jsx","App.js","serviceWorker.js","index.js"],"names":["GetProvincialStats","state","newApi","firstMapOfProvince","active","confirmed","deaths","fatality_rate","recovered","className","Component","Widget","this","props","widgetData","TotalConfirmed","TotalRecovered","TotalDeaths","style","textAlign","div","whileHover","scale","whileTap","x","y","LogoMain","onClick","e","window","alert","LineGraph","lineGraphRender","lineGraphFinalFunction","length","animate","transition","ease","duration","loop","Infinity","fontSize","color","height","display","alignItems","width","aspect","data","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","dot","animationDuration","type","strokeWidth","BarGraph","onBarClick","obj","province","activePayload","payload","State","setState","dataForLineGraph","lineGraphHandler","barChartInfo","map","Region","Province","Cases","Confirmed","maxBarSize","layout","paddingBottom","orientation","fill","barSize","radius","padding","cursor","background","borderRadius","Map","viewport","latitude","longitude","zoom","isDrabble","cluster","clusterRadius","showPopup","minWidth","maxWidth","mapboxApiAccessToken","onViewportChange","mapStyle","markerData","parseFloat","Lat","Lon","App","functionForLineGraph","provinceInfoForLineGraph","filteredSpecificProvince","canadianSummaryLineGraph","filter","Date","fullProvinceTimeline","coordinateValues","allProvinceData","allProvinceDataTwo","allProvinceDataThree","canadianSummaryAll","canadianSummaryBarGraph","canadianSummaryCanada","handOffToLineGraph","loading","graphComponentData","interpolation","polar","bind","fromDate","toDate","setHours","toISOString","split","axios","url","method","params","iso","headers","from","to","Countries","firstDataGather","console","log","region","allProvincialStats","provinceDataSets","Active","Deaths","Fatality","Recovered","threeDataGather","allProvincialStatsThree","provinceDataSetsThree","lineGraphArray","secondaryColor","graphStyle","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.50270241.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\n// URLs\nconst newApiResponse = \"https://covid-19-statistics.p.rapidapi.com/reports\"\n\nclass GetProvincialStats extends Component {\n    constructor() {\n        super();\n        this.state = {\n            newApi: [],\n            firstMapOfProvince: [\n                {\n                    active: '',\n                    confirmed: '',\n                    deaths: '',\n                    fatality_rate: '',\n                    recovered: '',\n                }\n            ],\n        };\n    }\n\n    // // componentDidMount() {\n    // //     axios ({\n    // //         url: newApiResponse,\n    // //         method: `GET`,\n    // //         params: {\n    // //         iso: `CAN`,\n    // //         // date: '2021-02-14',\n    // //     },\n    // //         headers :{\n    // //             'x-rapidapi-key': '63fefd3bbbmsh7e07abc4e3d579bp14f7e0jsnc007e001acd6',\n    // //             'x-rapidapi-host': 'covid-19-statistics.p.rapidapi.com'\n    // //         }\n    // //     }).then(response => {\n\n    // //         const provinces = response.data;\n            \n    // //         let arrayOfRestaurants = provinces.map(provincialStatsFirstMap => {\n    // //             const provincesObject = {\n    // //                 name: provincialStatsFirstMap.active,\n    // //                 image: provincialStatsFirstMap.confirmed,\n    // //                 cuisine: provincialStatsFirstMap.deaths,\n    // //                 review: provincialStatsFirstMap.fatality_rate,\n    // //                 poo: provincialStatsFirstMap.recovered,\n    // //             };\n    // //             return provincesObject;\n    // //         });\n    // //         // suggestions =  arrayOfRestaurants\n    // //     })\n    // // }\n    \n\n    // firstDataGather() {  \n    //     let allProvincialStats = this.state.newApi.map((provinceDataSets) => {\n    //         return {\n    //             Active: provinceDataSets.active,\n    //             Confirmed: provinceDataSets.confirmed,\n    //             Deaths: provinceDataSets.deaths,\n    //             Fatality: provinceDataSets.fatality_rate,\n    //             Recovered: provinceDataSets.recovered,\n    //         };\n    //     });\n    //     this.setState({\n    //         allProvinceData: allProvincialStats,\n    //     });\n    // };\n\n    // allProvinceDataTwo() {\n    //     let allProvincialStatsTwo = this.state.newApi.map((provinceDataSetsTwo) => {\n    //     let data = { Active: provinceDataSetsTwo.active,\n    //         Confirmed: provinceDataSetsTwo.confirmed,\n    //         Deaths: provinceDataSetsTwo.deaths,\n    //         Fatality: provinceDataSetsTwo.fatality_rate,\n    //         Recovered: provinceDataSetsTwo.recovered, };\n    //     return data;\n    //     });\n    //         this.setState({\n    //     allProvinceDataTwo: allProvincialStatsTwo,\n    //     });\n    // }\n\n    render() {\n        return (\n            <main className=\"section\">\n                <div className=\"column is-3\"></div>\n            </main>\n        );\n    }\n}\n\nexport default GetProvincialStats;\n","import React, { Component } from \"react\";\nimport { motion } from \"framer-motion\";\n\nclass Widget extends Component {\n  render() {\n    const {\n      TotalConfirmed,\n      TotalRecovered,\n      TotalDeaths,\n    } = this.props.widgetData;\n    // console.log(this.props.widgetData)\n    return (\n      <div className=\"customBox shadowTwo\" style={{ textAlign: \"center\" }}>\n        <h1 className=\"title\">National Live Count</h1>\n        <div className=\"is-multiline columns\">\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetOne shadowThree\"\n          >\n            <h3>CASES</h3>\n            <h2>{TotalConfirmed}</h2>\n          </motion.div>\n\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetThree shadowThree\"\n          >\n            <h3>RECOVERED</h3>\n            <h2>{TotalRecovered}</h2>\n          </motion.div>\n\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetTwo shadowThree\"\n          >\n            <h3>DEATHS</h3>\n            <h2>{TotalDeaths}</h2>\n          </motion.div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Widget;\n","import React, { Component } from \"react\";\n\nclass LogoMain extends Component {\n  render() {\n    return (\n      <section className=\"customBox shadowTwo\">\n        <div style={{ textAlign: \"center\" }}>\n          <h1 className=\"title\" style={{ textAlign: \"center\" }}>\n            Canada COVID-19 Tracker\n          </h1>\n          <p className=\"subtitle\">Provincial Case Numbers</p>\n          <button className=\"alertButton\"\n            onClick={(e) => window.alert('covid19api.com is missing \"Canada\" object from the array (I added a console.log to show the array where you can see this), Their dev team is working on a fix, Update coming soon, check back!')}>\n            Important! - Click me first!\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LogoMain;\n","import React, { Component } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { motion } from \"framer-motion\";\n\nclass LineGraph extends Component {\n  lineGraphRender = () => {\n    if (this.props.lineGraphFinalFunction.length === 0) {\n      return (\n        <motion.div\n          animate={{ scale: [1, 1.05, 1] }}\n          transition={{ ease: \"linear\", duration: 2, loop: Infinity }}\n        >\n          <h2\n            className=\"customBox shadowTwo\"\n            style={{\n              fontSize: \"2rem\",\n              color: \"#f35163\",\n              textAlign: \"center\",\n              height: \"40rem\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            CLICK A PROVINCE FROM \"BAR GRAPH\" TO DISPLAY CASE DATA\n          </h2>\n        </motion.div>\n      );\n    } else {\n      return (\n        <div className=\"customBox shadowTwo\">\n          <h3 style={{ textAlign: \"center\", color: \"white\", fontSize: 15 }}>\n            Province Cases\n          </h3>\n          <ResponsiveContainer width=\"100%\" aspect={3.5 / 3.75}>\n            <LineChart\n              // width={510}\n              // height={430}\n              data={this.props.lineGraphFinalFunction}\n              margin={{ top: 5, right: 10, left: 0, bottom: 5 }}\n              style={{ margin: \"0 auto\" }}\n            >\n              <CartesianGrid strokeDasharray=\"1 1\" />\n              <XAxis dataKey=\"Date\" stroke=\"#f35163\" />\n              <YAxis stroke=\"#f35163\" />\n              <Tooltip />\n              <Line\n                dot={false}\n                animationDuration={3000}\n                type=\"monotone\"\n                dataKey=\"Cases\"\n                stroke=\"#4f7cff\"\n                strokeWidth=\"6\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return <div>{this.lineGraphRender()}</div>;\n  }\n}\nexport default LineGraph;\n","import React, { Component } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { motion } from \"framer-motion\";\n\nclass BarGraph extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dataForLineGraph: null,\n    };\n  }\n\n  onBarClick = (obj) => {\n    let province = obj.activePayload[0].payload.State;\n    this.setState({ dataForLineGraph: province}, () => {\n      this.props.lineGraphHandler(this.state.dataForLineGraph);\n    });\n  };\n\n  render() {\n    const { barChartInfo } = this.props;\n    // console.log(this.barChartInfo)\n    return (\n      <motion.div whileTap={{ scale: 1.1, x: \"-5px\", y: \"5px\" }}>\n        <div className=\"customBox\" style={{ textAlign: \"center\", width: \"100%\", height: 740 }}>\n          <h1 className=\"title\">Total Confirmed Cases</h1>\n          <ResponsiveContainer>\n            <BarChart\n              data={barChartInfo.map((e) => {\n                return e.Region.province !== \"\"\n                  ? { Province: e.Region.province, Cases: e.Confirmed}\n                  : null;\n              })}\n              maxBarSize={20}\n              layout={\"vertical\"}\n              style={{ paddingBottom: 20 }}\n              onClick={this.onBarClick}\n            >\n              <CartesianGrid strokeDasharray=\"1 1\" />\n              <XAxis type={\"number\"} orientation={\"bottom\"} stroke=\"#f35163\" />\n              <YAxis\n                type={\"category\"}\n                orientation={\"left\"}\n                dataKey={\"Province\"}\n                stroke=\"#f35163\"\n              />\n              <Tooltip />\n              <Bar dataKey=\"Cases\" fill=\"#4f7cff\" barSize={37} radius={2} />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </motion.div>\n    );\n  }\n}\n\nexport default BarGraph;\n","import React, { Component } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\n//\nconst style = {\n  padding: \"3px 10px\",\n  color: \"#fff\",\n  cursor: \"pointer\",\n  background: \"#111\",\n  borderRadius: \"50px\",\n  fontSize: 15,\n};\n\nclass Map extends Component {\n  state = {\n    viewport: {\n      width: \"auto\",\n      height: 716,\n      latitude: 62,\n      longitude: -96.81,\n      zoom: 2.3,\n      isDrabble: \"false\",\n      cluster: \"true\",\n      clusterRadius: 80,\n    },\n    showPopup: true,\n  };\n\n  render() {\n    return (\n      <div className=\"customBox shadowTwo\" style={{ textAlign: \"center\" }}>\n        <ReactMapGL\n          style={{ minWidth: \"100%\", maxWidth: \"100%\" }}\n          {...this.state.viewport}\n          mapboxApiAccessToken={\n            \"pk.eyJ1IjoieGVub2pheCIsImEiOiJjazk5MDlpNDEwN2o2M21ueDVoNXQ1eWpnIn0.-Sy_LkU_ZYcmyH09Zl-MYw\"\n          }\n          onViewportChange={(viewport) => this.setState({ viewport })}\n          mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n        >\n          {this.props.markerData.map((province) => {\n            return (\n              <Marker\n                latitude={parseFloat(province.Lat)}\n                longitude={parseFloat(province.Lon)}\n              >\n                <div style={style}>{province.Cases}</div>\n              </Marker>\n            );\n          })}\n        </ReactMapGL>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport GetProvincialStats from \"./components/GetProvincialStats\";\nimport Widget from \"./components/Widget\";\nimport LogoMain from \"./components/LogoMain\";\nimport LineGraph from \"./components/LineGraph\"; // Rechart Graphs\nimport BarGraph from \"./components/BarGraph\"; // Rechart Graphs\nimport Map from \"./components/Map\"; // MapBox\nimport Loader from \"react-loader-spinner\";\nimport { motion } from \"framer-motion\"; //Framer motion for animations\n\n// URLs\nconst provinceDataURL =\"https://api.covid19api.com/country/canada/status/confirmed/live\";\nconst summaryDataURL = \"https://api.covid19api.com/summary\";\n\nconst newApiResponse = \"https://covid-19-statistics.p.rapidapi.com/reports\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      newApi: [],\n      allProvinceData: [],\n      allProvinceDataTwo: [],\n      allProvinceDataThree: [],\n\n      canadianSummaryLineGraph: [],\n      canadianSummaryAll: [],\n      canadianSummaryBarGraph: [],\n      canadianSummaryCanada: [],\n      handOffToLineGraph: [],\n      loading: true,\n      graphComponentData: {\n        interpolation: \"natural\",\n        polar: false,\n      },\n      fullProvinceTimeline: \"\",\n    };\n    this.coordinateValues = this.coordinateValues.bind(this);\n  }\n\n  async componentDidMount() {\n\n    // To generate today's date\n    let fromDate = new Date();\n    let toDate = new Date();\n    // Adjusting time to get yesterday's date\n    fromDate.setHours(-30, 0, 0, 0);\n    toDate.setHours(-27, 0, 0, 0);\n    // fromDate and toDate Range\n    fromDate = fromDate.toISOString().split(\".\")[0] + \"Z\";\n    toDate = toDate.toISOString().split(\".\")[0] + \"Z\";\n\n        const { data: newApi } = await axios ({\n      url: newApiResponse,\n      method: `GET`,\n      params: {\n        iso: `CAN`,\n        // date: '2021-02-14',\n      },\n      headers :{\n        'x-rapidapi-key': '63fefd3bbbmsh7e07abc4e3d579bp14f7e0jsnc007e001acd6',\n        'x-rapidapi-host': 'covid-19-statistics.p.rapidapi.com'\n      }\n    });\n\n    const { data: canadianSummaryAll } = await axios({\n      url: provinceDataURL,\n      method: `GET`,\n      params: {\n        from: fromDate,\n        to: toDate,\n      },\n    });\n\n    const { data: canadianSummaryCanada } = await axios({\n      url: summaryDataURL,\n      method: `GET`,\n    });\n\n    this.setState({\n      newApi: newApi.data,\n      canadianSummaryAll,\n      canadianSummaryCanada: canadianSummaryCanada.Countries[30],\n      loading: false,\n    });\n    // this.allProvinceDataTwo(this.state.newApi)\n    this.firstDataGather()\n    console.log(this.state.allProvinceData)\n    console.log(this.state.newApi[0].region)\n    console.log(this.state.newApi[0].region.province)\n  }\n\n  firstDataGather() {  \n    let allProvincialStats = this.state.newApi.map((provinceDataSets) => {\n      return {\n        Active: provinceDataSets.active,\n        Confirmed: provinceDataSets.confirmed,\n        Deaths: provinceDataSets.deaths,\n        Fatality: provinceDataSets.fatality_rate,\n        Recovered: provinceDataSets.recovered,\n        Region: provinceDataSets.region,\n      };\n    });\n    this.setState({\n      allProvinceData: allProvincialStats,\n    });\n    this.threeDataGather()\n    console.log(this.state.allProvinceData)\n  };\n\n    threeDataGather() {  \n    let allProvincialStatsThree = this.state.allProvinceData.map((provinceDataSetsThree) => {\n      return {\n        Province: provinceDataSetsThree.province,\n      };\n    });\n    this.setState({\n      allProvinceDataThree: allProvincialStatsThree,\n    });\n  };\n\n  // allProvinceDataTwo() {\n  //   let allProvincialStatsTwo = this.state.newApi.map((provinceDataSetsTwo) => {\n  //     let data = { Active: provinceDataSetsTwo.active,\n  //       Confirmed: provinceDataSetsTwo.confirmed,\n  //       Deaths: provinceDataSetsTwo.deaths,\n  //       Fatality: provinceDataSetsTwo.fatality_rate,\n  //       Recovered: provinceDataSetsTwo.recovered,\n  //       Region: provinceDataSetsTwo.region,\n  //     };\n  //     return data;\n  //   });\n  //   this.setState({\n  //     allProvinceDataTwo: allProvincialStatsTwo,\n  //   });\n  // }\n\n  // provinceGraph = (singleProvince) => {\n  //   let provinceHistoricalData = this.state.canadianSummaryAll.filter(\n  //     (provinceName) => {\n  //       return provinceName.Province === singleProvince.Province\n  //         ? {\n  //           finalizedCases: provinceName,\n  //         }\n  //         : null;\n  //     }\n  //   );\n  //   this.setState({\n  //     historicalProvinceDataForGraph: provinceHistoricalData,\n  //   });\n  // };\n\n  // map through the canadian canada summary and kick out province and case number. then filter through through that, if case = 0 remove it from the array // \n\n  // add a unique key, for each set in the array // \n  functionForLineGraph = (provinceInfoForLineGraph) => {\n    let filteredSpecificProvince = this.state.canadianSummaryLineGraph.filter(\n      (e) => {\n        return e.Province === provinceInfoForLineGraph\n          ? {\n            Cases: e.Cases,\n            Date: e.Date,\n            Province: e.Province,\n          }\n          : null;\n      }\n    );\n    this.setState({ fullProvinceTimeline: filteredSpecificProvince }, () => {\n      this.coordinateValues();\n    });\n  };\n\n  coordinateValues() {\n    let lineGraphArray = this.state.fullProvinceTimeline.map((e) => {\n      let data = { Date: e.Date, Cases: e.Cases };\n      return data;\n    });\n    this.setState({\n      handOffToLineGraph: lineGraphArray,\n    });\n  }\n\n  render() {\n    // console.log(this.state.newApi)\n    // console.log(this.state.newApi[0])\n    // console.log(this.state.allProvinceData)\n    // console.log(this.state.allProvinceDataThree)\n    // console.log(this.state.allProvinceDataTwo)\n    // console.log(this.state.newApi[0].region.province)\n    // console.log(newApi.data[0].date)\n    // console.log(newApi.data[0].confirmed)\n    const {\n      allProvinceData,\n      // canadianSummaryBarGraph,\n      canadianSummaryAll,\n      canadianSummaryCanada,\n      graphComponentData,\n      handOffToLineGraph,\n    } = this.state;\n    if (this.state.loading) {\n      return (\n        <div className=\"loadScreen\">\n          <Loader\n            type=\"MutatingDots\"\n            color=\"#4f7cff\"\n            secondaryColor=\"#f35163\"\n            height={100}\n            width={100}\n          />\n        </div>\n      );\n    }\n    return (\n      <motion.div>  \n        <main className=\"section\">\n          <div className=\"columns is-centered\">\n            <div className=\"column is-3\"></div>\n            <div className=\"column is-5 \">\n              <LogoMain />\n            </div>\n            <div className=\"column is-4\"></div>\n          </div>\n          <section className=\"columns\">\n            <div className=\"column is-3\">\n              <BarGraph\n                // barChartInfo={canadianSummaryBarGraph}\n                barChartInfo={allProvinceData}\n                lineGraphHandler={this.functionForLineGraph}\n              />\n              <GetProvincialStats/>\n            </div>\n            <div className=\"column is-5\">\n              <motion.div whileHover={{ scale: 1.2, y: \"-20px\" }}>\n                <Map markerData={canadianSummaryAll} />\n              </motion.div>\n            </div>\n            <div className=\"column is-4\">\n              <Widget widgetData={canadianSummaryCanada} />\n              <motion.div\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n              >\n                <LineGraph\n                  graphStyle={graphComponentData}\n                  lineGraphFinalFunction={handOffToLineGraph}\n                />\n              </motion.div>\n            </div>\n          </section>\n        </main>\n      </motion.div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}