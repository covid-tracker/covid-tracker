{"version":3,"sources":["components/Widget.jsx","components/WidgetTwo.jsx","components/LogoMain.jsx","components/LineGraph.jsx","components/BarGraph.jsx","components/Map.jsx","App.js","serviceWorker.js","index.js"],"names":["Widget","this","props","widgetData","TotalConfirmed","TotalRecovered","TotalDeaths","NewConfirmed","NewRecovered","NewDeaths","console","log","className","style","textAlign","div","whileHover","scale","whileTap","x","y","Component","WidgetTwo","widgetDataTwo","confirmed","active","deaths","recovered","fatality_rate","LogoMain","onClick","e","window","alert","LineGraph","lineGraphRender","lineGraphFinalFunction","length","animate","transition","ease","duration","loop","Infinity","fontSize","color","height","display","alignItems","width","aspect","data","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","dot","animationDuration","type","strokeWidth","BarGraph","onBarClick","obj","province","activePayload","payload","State","setState","dataForLineGraph","lineGraphHandler","state","onBarClickTwo","dataForProvincialStats","provincialStatsHandler","barChartInfo","map","Region","Province","Cases","Confirmed","maxBarSize","layout","paddingBottom","orientation","fill","barSize","radius","padding","cursor","background","borderRadius","Map","viewport","latitude","longitude","zoom","isDrabble","cluster","clusterRadius","showPopup","minWidth","maxWidth","mapboxApiAccessToken","onViewportChange","mapStyle","markerData","parseFloat","Lat","Lon","newApiResponse","App","functionForLineGraph","provinceInfoForLineGraph","filteredSpecificProvince","canadianSummaryLineGraph","filter","Date","fullProvinceTimeline","coordinateValues","functionForProvincialTotals","provinceInfoForProvincialTotals","filteredSpecificProvinceTwo","allProvinceData","Deaths","Active","coordinateValuesTwo","newApi","widgetDataData","newApiDate","allProvinceDataTwo","allProvinceDataThree","canadianSummaryAll","canadianSummaryBarGraph","canadianSummaryCanada","handOffToLineGraph","totalsForProvincialStats","totalsForProvincialStatsArray","loading","graphComponentData","interpolation","polar","bind","fromDate","toDate","setHours","toISOString","split","axios","url","method","params","iso","date","headers","newApiWidget","from","to","Countries","firstDataGather","allProvincialStats","provinceDataSets","Fatality","Recovered","region","threeDataGather","allProvincialStatsThree","provinceDataSetsThree","lineGraphArray","provincialStatsArray","secondaryColor","graphStyle","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5e56a64c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { motion } from \"framer-motion\";\n\nclass Widget extends Component {\n  render() {\n    const {\n      TotalConfirmed,\n      TotalRecovered,\n      TotalDeaths,\n      NewConfirmed,\n      NewRecovered,\n      NewDeaths\n\n    } = this.props.widgetData;\n    console.log(this.props.widgetData)\n    return (\n      <div className=\"customBox shadowTwo\" style={{ textAlign: \"center\" }}>\n        <h1 className=\"title\">National Live Count</h1>\n        <div className=\"is-multiline columns\">\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetOne shadowThree\"\n          >\n            <h3>CASES</h3>\n            <h2>{TotalConfirmed}</h2>\n          </motion.div>\n\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetThree shadowThree\"\n          >\n            <h3>RECOVERED</h3>\n            <h2>{TotalRecovered}</h2>\n          </motion.div>\n\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetTwo shadowThree\"\n          >\n            <h3>DEATHS</h3>\n            <h2>{TotalDeaths}</h2>\n          </motion.div>\n\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetOne shadowThree\"\n          >\n            <h3>recent cases</h3>\n            <h2>{NewConfirmed}</h2>\n          </motion.div>\n\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetThree shadowThree\"\n          >\n            <h3>recent deaths</h3>\n            <h2>{NewDeaths}</h2>\n          </motion.div>\n\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetTwo shadowThree\"\n          >\n            <h3>recent recoveries</h3>\n            <h2>{NewRecovered}</h2>\n          </motion.div>\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default Widget;\n","import React, { Component } from \"react\";\nimport { motion } from \"framer-motion\";\n\nclass WidgetTwo extends Component {\n  render() {\n    const {\n      confirmed,\n      active,\n      deaths,\n      recovered,\n      fatality_rate,\n    } = this.props.widgetDataTwo;\n    console.log(this.widgetDataTwo)\n    return (\n      <div className=\"customBox shadowTwo\" style={{ textAlign: \"center\" }}>\n        <h1 className=\"title\">Ontario Live Count</h1>\n        <div className=\"is-multiline columns\">\n\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetOne shadowThree\"\n          >\n            <h3>cases</h3>\n            <h2>{confirmed}</h2>\n          </motion.div>\n\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetThree shadowThree\"\n          >\n            <h3>active cases</h3>\n            <h2>{active}</h2>\n          </motion.div>\n\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetTwo shadowThree\"\n          >\n            <h3>DEATHS</h3>\n            <h2>{deaths}</h2>\n          </motion.div>\n        </div>\n\n        <div className=\"is-multiline columns\">\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetOne shadowThree\"\n          >\n            <h3>recovered</h3>\n            <h2>{recovered}</h2>\n          </motion.div>\n\n          <motion.div\n            whileHover={{ scale: 1.1 }}\n            whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n            className=\"column widBox widgetThree shadowThree\"\n          >\n            <h3>fatality rate</h3>\n            <h2>{fatality_rate}</h2>\n          </motion.div>\n\n        </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default WidgetTwo;","import React, { Component } from \"react\";\n\nclass LogoMain extends Component {\n  render() {\n    return (\n      <section className=\"customBox shadowTwo\">\n        <div style={{ textAlign: \"center\" }}>\n          <h1 className=\"title\" style={{ textAlign: \"center\" }}>\n            Canada COVID-19 Tracker\n          </h1>\n          <p className=\"subtitle\">Provincial Case Numbers</p>\n          <button className=\"alertButton\"\n            onClick={(e) => window.alert('covid19api.com is missing \"Canada\" object from the array (I added a console.log to show the array where you can see this), Their dev team is working on a fix, Update coming soon, check back!')}>\n            Important! - Click me first!\n          </button>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default LogoMain;\n","import React, { Component } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { motion } from \"framer-motion\";\n\nclass LineGraph extends Component {\n  lineGraphRender = () => {\n    if (this.props.lineGraphFinalFunction.length === 0) {\n      return (\n        <motion.div\n          animate={{ scale: [1, 1.05, 1] }}\n          transition={{ ease: \"linear\", duration: 2, loop: Infinity }}\n        >\n          <h2\n            className=\"customBox shadowTwo\"\n            style={{\n              fontSize: \"2rem\",\n              color: \"#f35163\",\n              textAlign: \"center\",\n              height: \"40rem\",\n              display: \"flex\",\n              alignItems: \"center\",\n            }}\n          >\n            CLICK A PROVINCE FROM \"BAR GRAPH\" TO DISPLAY CASE DATA\n          </h2>\n        </motion.div>\n      );\n    } else {\n      return (\n        <div className=\"customBox shadowTwo\">\n          <h3 style={{ textAlign: \"center\", color: \"white\", fontSize: 15 }}>\n            Province Cases\n          </h3>\n          <ResponsiveContainer width=\"100%\" aspect={3.5 / 3.75}>\n            <LineChart\n              // width={510}\n              // height={430}\n              data={this.props.lineGraphFinalFunction}\n              margin={{ top: 5, right: 10, left: 0, bottom: 5 }}\n              style={{ margin: \"0 auto\" }}\n            >\n              <CartesianGrid strokeDasharray=\"1 1\" />\n              <XAxis dataKey=\"Date\" stroke=\"#f35163\" />\n              <YAxis stroke=\"#f35163\" />\n              <Tooltip />\n              <Line\n                dot={false}\n                animationDuration={3000}\n                type=\"monotone\"\n                dataKey=\"Cases\"\n                stroke=\"#4f7cff\"\n                strokeWidth=\"6\"\n              />\n            </LineChart>\n          </ResponsiveContainer>\n        </div>\n      );\n    }\n  };\n\n  render() {\n    return <div>{this.lineGraphRender()}</div>;\n  }\n}\nexport default LineGraph;\n","import React, { Component } from \"react\";\nimport {\n  BarChart,\n  Bar,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { motion } from \"framer-motion\";\n\nclass BarGraph extends Component {\n  constructor() {\n    super();\n    this.state = {\n      dataForLineGraph: null,\n      dataForProvincialStats: null,\n    };\n  }\n\n  onBarClick = (obj) => {\n    let province = obj.activePayload[0].payload.State;\n    this.setState({ dataForLineGraph: province}, () => {\n      this.props.lineGraphHandler(this.state.dataForLineGraph);\n    });\n    // console.log(this.state.dataForLineGraph)\n  };\n\n    onBarClickTwo = (obj) => {\n    let province = obj.activePayload[0].payload.State;\n    this.setState({ dataForProvincialStats: province}, () => {\n      this.props.provincialStatsHandler(this.state.dataForProvincialStats);\n    });\n    // console.log(this.province)\n  };\n\n  render() {\n    // console.log(this.barChartInfo)\n    const { barChartInfo } = this.props;\n    return (\n      <motion.div whileTap={{ scale: 1.1, x: \"-5px\", y: \"5px\" }}>\n        <div className=\"customBox\" style={{ textAlign: \"center\", width: \"100%\", height: 740 }}>\n          <h1 className=\"barGraphTitle\">Total Confirmed Cases</h1>\n          <ResponsiveContainer>\n            <BarChart\n              data={barChartInfo.map((e) => {\n                return e.Region.province !== \"\"\n                  ? { Province: e.Region.province, Cases: e.Confirmed}\n                  : null;\n              })}\n              maxBarSize={20}\n              layout={\"vertical\"}\n              style={{ paddingBottom: 20 }}\n              // onClick={this.onBarClick}\n              onClick={this.onBarClickTwo}\n            >\n              <CartesianGrid strokeDasharray=\"1 1\" />\n              <XAxis type={\"number\"} orientation={\"bottom\"} stroke=\"#f35163\" />\n              <YAxis\n                type={\"category\"}\n                orientation={\"left\"}\n                dataKey={\"Province\"}\n                stroke=\"#f35163\"\n              />\n              <Tooltip />\n              <Bar dataKey=\"Cases\" fill=\"#4f7cff\" barSize={37} radius={2} />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n      </motion.div>\n    );\n  }\n}\n\nexport default BarGraph;\n","import React, { Component } from \"react\";\nimport ReactMapGL, { Marker } from \"react-map-gl\";\n//\nconst style = {\n  padding: \"3px 10px\",\n  color: \"#fff\",\n  cursor: \"pointer\",\n  background: \"#111\",\n  borderRadius: \"50px\",\n  fontSize: 15,\n};\n\nclass Map extends Component {\n  state = {\n    viewport: {\n      width: \"auto\",\n      height: 716,\n      latitude: 62,\n      longitude: -96.81,\n      zoom: 2.3,\n      isDrabble: \"false\",\n      cluster: \"true\",\n      clusterRadius: 80,\n    },\n    showPopup: true,\n  };\n\n  render() {\n    return (\n      <div className=\"customBox shadowTwo\" style={{ textAlign: \"center\" }}>\n        <ReactMapGL\n          style={{ minWidth: \"100%\", maxWidth: \"100%\" }}\n          {...this.state.viewport}\n          mapboxApiAccessToken={\n            \"pk.eyJ1IjoieGVub2pheCIsImEiOiJjazk5MDlpNDEwN2o2M21ueDVoNXQ1eWpnIn0.-Sy_LkU_ZYcmyH09Zl-MYw\"\n          }\n          onViewportChange={(viewport) => this.setState({ viewport })}\n          mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n        >\n          {this.props.markerData.map((province) => {\n            return (\n              <Marker\n                latitude={parseFloat(province.Lat)}\n                longitude={parseFloat(province.Lon)}\n              >\n                <div style={style}>{province.Cases}</div>\n              </Marker>\n            );\n          })}\n        </ReactMapGL>\n      </div>\n    );\n  }\n}\n\nexport default Map;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport Widget from \"./components/Widget\"; // Widget made for the total stats in top right corner // \nimport WidgetTwo from \"./components/WidgetTwo\"; // Widget made for the total stats in top right corner // \nimport LogoMain from \"./components/LogoMain\"; \nimport LineGraph from \"./components/LineGraph\"; // Rechart Graphs // \nimport BarGraph from \"./components/BarGraph\"; // Rechart Graphs // \nimport Map from \"./components/Map\"; // MapBox //\nimport Loader from \"react-loader-spinner\";\nimport { motion } from \"framer-motion\"; //Framer motion for animations //\n\n// URLs, Currently taking care of the total National Figures // \nconst provinceDataURL =\"https://api.covid19api.com/country/canada/status/confirmed/live\";\nconst summaryDataURL = \"https://api.covid19api.com/summary\";\n\n// New URLs, currently taking care of the provincial stats // \nconst newApiResponse = \"https://covid-19-statistics.p.rapidapi.com/reports\"\nconst newApiResponseDate = \"https://covid-19-statistics.p.rapidapi.com/provinces\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      newApi: [],\n      widgetDataData: [],\n      newApiDate: [],\n      allProvinceData: [],\n      allProvinceDataTwo: [],\n      allProvinceDataThree: [],\n\n      canadianSummaryLineGraph: [],\n      canadianSummaryAll: [],\n      canadianSummaryBarGraph: [],\n      canadianSummaryCanada: [],\n      handOffToLineGraph: [],\n      totalsForProvincialStats: [],\n      totalsForProvincialStatsArray: [],\n      loading: true,\n      graphComponentData: {\n        interpolation: \"natural\",\n        polar: false,\n      },\n      fullProvinceTimeline: \"\",\n    };\n    this.coordinateValues = this.coordinateValues.bind(this);\n    this.coordinateValuesTwo = this.coordinateValuesTwo.bind(this)\n  }\n\n  async componentDidMount() {\n    // To generate today's date // \n    let fromDate = new Date();\n    let toDate = new Date();\n    // Adjusting time to get yesterday's date // \n    fromDate.setHours(-30, 0, 0, 0);\n    toDate.setHours(-27, 0, 0, 0);\n    // fromDate and toDate Range // \n    fromDate = fromDate.toISOString().split(\".\")[0] + \"Z\";\n    toDate = toDate.toISOString().split(\".\")[0] + \"Z\";\n\n        const { data: newApi } = await axios ({\n      url: newApiResponse,\n      method: `GET`,\n      params: {\n        iso: `CAN`,\n        date: '2021-02-23', \n      },\n      headers :{\n        'x-rapidapi-key': '63fefd3bbbmsh7e07abc4e3d579bp14f7e0jsnc007e001acd6',\n        'x-rapidapi-host': 'covid-19-statistics.p.rapidapi.com'\n      }\n    });\n\n        const { data: newApiWidget } = await axios ({\n      url: newApiResponse,\n      method: `GET`,\n      params: {\n        iso: `CAN`,\n        date: '2021-02-14', \n      },\n      headers :{\n        'x-rapidapi-key': '63fefd3bbbmsh7e07abc4e3d579bp14f7e0jsnc007e001acd6',\n        'x-rapidapi-host': 'covid-19-statistics.p.rapidapi.com'\n      }\n    });\n\n        const { data: newApiDate } = await axios ({\n      url: newApiResponseDate,\n      method: `GET`,\n      params: {\n        from: fromDate,\n        to: toDate,\n        iso: `CAN`,\n        date: '2021-02-14',\n      },\n      headers :{\n        'x-rapidapi-key': '63fefd3bbbmsh7e07abc4e3d579bp14f7e0jsnc007e001acd6',\n        'x-rapidapi-host': 'covid-19-statistics.p.rapidapi.com'\n      }\n          });\n\n    const { data: canadianSummaryAll } = await axios({\n      url: provinceDataURL,\n      method: `GET`,\n      params: {\n        from: fromDate,\n        to: toDate,\n      },\n    });\n\n    const { data: canadianSummaryCanada } = await axios({\n      url: summaryDataURL,\n      method: `GET`,\n    });\n\n    this.setState({\n      newApi: newApi.data,\n      widgetDataData: newApiWidget.data[10],\n      newApiDate :newApiDate.data,\n      canadianSummaryAll,\n      canadianSummaryCanada: canadianSummaryCanada.Countries[30],\n      loading: false,\n    });\n    this.firstDataGather()\n    // console.log(this.state.newApi)\n    // console.log(this.state.allProvinceData.data)\n    // console.log(this.state.newApi[0].region.province)\n  }\n\n  firstDataGather() {  \n    let allProvincialStats = this.state.newApi.map((provinceDataSets) => {\n      return {\n        Active: provinceDataSets.active,\n        Confirmed: provinceDataSets.confirmed,\n        Deaths: provinceDataSets.deaths,\n        Fatality: provinceDataSets.fatality_rate,\n        Recovered: provinceDataSets.recovered,\n        Region: provinceDataSets.region,\n        Date\n      };\n    });\n    this.setState({\n      allProvinceData: allProvincialStats,\n    });\n    this.threeDataGather()\n  };\n\n    threeDataGather() {  \n    let allProvincialStatsThree = this.state.allProvinceData.map((provinceDataSetsThree) => {\n      return {\n        Province: provinceDataSetsThree.province,\n      };\n    });\n    this.setState({\n      allProvinceDataThree: allProvincialStatsThree,\n    });\n  };\n\n  // provinceGraph = (singleProvince) => {\n  //   let provinceHistoricalData = this.state.canadianSummaryAll.filter(\n  //     (provinceName) => {\n  //       return provinceName.Province === singleProvince.Province\n  //         ? {\n  //           finalizedCases: provinceName,\n  //         }\n  //         : null;\n  //     }\n  //   );\n  //   this.setState({\n  //     historicalProvinceDataForGraph: provinceHistoricalData,\n  //   });\n  // };\n\n  // map through the canadian canada summary and kick out province and case number. then filter through through that, if case = 0 remove it from the array // \n\n  // Add a unique key, for each set in the array // \n  functionForLineGraph = (provinceInfoForLineGraph) => {\n    let filteredSpecificProvince = this.state.canadianSummaryLineGraph.filter(\n      (e) => {\n        return e.Province === provinceInfoForLineGraph\n          ? {\n            Cases: e.Cases,\n            Date: e.Date,\n            Province: e.Province,\n          }\n          : null;\n      }\n    );\n    this.setState({ fullProvinceTimeline: filteredSpecificProvince }, () => {\n      this.coordinateValues();\n    });\n  };\n\n  coordinateValues() {\n    let lineGraphArray = this.state.fullProvinceTimeline.map((e) => {\n      let data = { Date: e.Date, Cases: e.Cases };\n      return data;\n    });\n    this.setState({\n      handOffToLineGraph: lineGraphArray,\n    });\n  }\n\n  functionForProvincialTotals = (provinceInfoForProvincialTotals) => {\n    let filteredSpecificProvinceTwo = this.state.allProvinceData.filter(\n      (e) => {\n        return e.Confirmed === provinceInfoForProvincialTotals\n          ? {\n            Cases: e.Confirmed,\n            Date: e.Deaths,\n            Province: e.Active,\n          }\n          : null;\n      }\n    );\n    this.setState({ fullProvinceTimeline: filteredSpecificProvinceTwo }, () => {\n      this.coordinateValuesTwo();\n    });\n  };\n\n  coordinateValuesTwo() {\n    let provincialStatsArray = this.state.fullProvinceTimeline.map((e) => {\n      let data = { Date: e.Deaths, Cases: e.Confirmed };\n      return data;\n    });\n    this.setState({\n      totalsForProvincialStats: provincialStatsArray,\n    });\n  }\n\n  render() {\n    const {\n      allProvinceData,\n      // canadianSummaryBarGraph,\n      canadianSummaryAll,\n      widgetDataData,\n      canadianSummaryCanada,\n      graphComponentData,\n      handOffToLineGraph,\n    } = this.state;\n    if (this.state.loading) {\n      return (\n        <div className=\"loadScreen\">\n          <Loader\n            type=\"MutatingDots\"\n            color=\"#4f7cff\"\n            secondaryColor=\"#f35163\"\n            height={100}\n            width={100}\n          />\n        </div>\n      );\n    }\n    return (\n      <motion.div>  \n        <main className=\"section\">\n          <div className=\"columns is-centered\">\n            <div className=\"column is-3\"></div>\n            <div className=\"column is-5 \">\n              <LogoMain />\n            </div>\n            <div className=\"column is-4\"></div>\n          </div>\n          <section className=\"columns\">\n            <div className=\"column is-3\">\n              <BarGraph\n                // barChartInfo={canadianSummaryBarGraph} \n                barChartInfo={allProvinceData}\n                lineGraphHandler={this.functionForLineGraph}\n                provincialStatsHandler={this.functionForProvincialTotals}\n              />\n            </div>\n            <div className=\"column is-5\">\n              <motion.div whileHover={{ scale: 1.2, y: \"-20px\" }}>\n                {/* <Map markerData={allProvinceData} /> */}\n                <Map markerData={canadianSummaryAll} />\n              </motion.div>\n            </div>\n            <div className=\"column is-4\">\n              <Widget \n                widgetData={canadianSummaryCanada} \n                />\n              <WidgetTwo \n                widgetDataTwo={widgetDataData} \n                />\n              <motion.div\n                whileHover={{ scale: 1.1 }}\n                whileTap={{ scale: 0.9, x: \"-5px\", y: \"5px\" }}\n              >\n                <LineGraph\n                  graphStyle={graphComponentData}\n                  lineGraphFinalFunction={handOffToLineGraph}\n                />\n              </motion.div>\n            </div>\n          </section>\n        </main>\n      </motion.div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}